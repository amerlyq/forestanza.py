SEE
	Translate
		https://github.com/soimort/translate-shell
		http://pythonhosted.org/goslate/

	Resources
		http://www.findbestopensource.com/tagged/japanese?start=10&fq=Windows

Formats generators
	fb2
		https://github.com/IvanAnishchuk/fb2-vim
		https://github.com/lintest/fb2edit
		https://github.com/gonzoua/book-tools

	epub
		http://web.sigil.googlecode.com/git/files/OEBPS/Text/tutorial_stylesheets.html

	xhtml
		[_] THINK? use xml2dict parser for forming page?
			: https://github.com/martinblech/xmltodict
		FIXME keep scroll position on resize
			http://stackoverflow.com/questions/21394157/update-scroll-position-on-resize-of-window#
		[_] DEV Copy to clipboard on press (individual words) in table column
		>>[_] http://www.html5rocks.com/en/mobile/responsivedesign/
		[_] DEV popup meaning/transcription on click
			http://www.sitepoint.com/xhtml-strict-popups/
			http://accessify.com/features/tutorials/the-perfect-popup/archive/
		THINK
			[_] toggle visibility of section with article from yarxi by click on word
			[_] reuse same article (content is one copy) for all same words (construct dictionary with back-refs)
			[_] jump to glossary at bottom of page / another embedded page / popup window with content

	256 term -> RGB
		http://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html

Read fb2
	zcat "$1"|xsltproc /usr/local/bin/data/FB2_2_xhtml.xsl -|lynx -stdin -display_charset=UTF-8
	: xsl you can get from fb2 offsite


THINK
	Export vim syntax highlighting to phone
		hardcopy > ss.ps (no japanese) and then ps2pdf ss.ps
		:OR :TOhtml and then make epub?
		:> Now I work with .xhtml creation

	[_] Reformat synonyms table to easily copy entries into yml as whole row
		:= can be also kept hidden and being copied in yml format only on click

	IDEA: different processing, based on absolute paths?
		E.g. -- treat group 'Characters' as whole words only
		:> No sense: as I could use patterns in fields. Firstly, accumulate some lexics.

	IDEA: in xhtml make words in table as links
		en-ru -- translate in online dictionary
		jap-kanji -- search in yarxi/stardict

REGRESSION
	[_] FIX generation from yml vim syntax highlightings
	[_] THINK if possible to fix auto indentation for yml
	[_] Concealing in yml of '|' and replacing with bold ', '

DEV integrate yarxi.pl into vim
	Search kanji/word directly in articles
	Use instead of yarxi with license

DEV plugin for vim: specific highlighting and editing optimization
	:= To eliminate necessity in votl and logically use some own keymaps.
	:+ Then I could use python inside vim to regenerate and reload syntax files
	Consider as the best idea, especially for ranobe translation process.
	[_] Shortcuts to fast populate *.yml with new words
		:? open split with local .yml, fast open ',.[0-9]' common .yml
	[_] Regex convert
		https://github.com/othree/eregex.vim/blob/master/plugin/eregex.vim


DEV
	[_] USE cfg/*.yml for common lexics and <ranobe>/*.yml for specific
	[_] Generate vimrc from all yml cfgs into ~/.cache/forestanza.vim
		: OR load by :pythondo, assuming already installed pyYaml
	[_] Load syntax by 'source forestanza.vim' inside local <ranobe>/.vimrc
		: OR inside <ranobe>/ place script to launch: vim -c 'source ...'
	[_] Split lexics and colorscheme.
		[_] Treat whole key-path inside yml as identifier for group
		[_] Inherit colors in colorschemes from parent level
		[_] Override colors by direct path
		[_] Set several color variations for term and gui/pdf
